# AUTOGENERATED! DO NOT EDIT! File to edit: ..\01_dataset.ipynb.

# %% auto 0
__all__ = ['Base', 'Storm', 'StormEvent', 'HailReport', 'Intersection']

# %% ..\01_dataset.ipynb 3
from pathlib import Path
import geopandas as gpd
import sqlite3
import datetime
import numpy as np
import gc


from tathu.io import spatialite
from tathu.constants import KM_PER_DEGREE

import exp4.core
from .core import *
#from exp4.core import load_relato

# %% ..\01_dataset.ipynb 21
from sqlalchemy.ext.declarative import declarative_base
from geoalchemy2 import Geometry
from sqlalchemy import create_engine, Column, Integer, Float, String, DateTime, ForeignKey

from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, relationship

Base = declarative_base()


class Storm(Base):
    """
        Table to store unique storms and their evolving identifiers through splits and merges
    """
    __tablename__ = "storms"
    
    id = Column(Integer, primary_key=True)
    identifier = Column(String, index=True)
    ##TODO: Additional fields to track the first and last appearance


class StormEvent(Base):
    """
        Table to store each event, corresponding to the storm's physical data in each satellite scene
    """
    __tablename__ = "storm_events"

    id = Column(Integer, primary_key=True)
    storm_id = Column(Integer, ForeignKey("storms.id"))
    event_type = Column(String)
    datetime = Column(DateTime)
    count = Column(Integer)
    mean_bt = Column(Float)
    min_bt = Column(Float)
    std_dev_bt = Column(Float)
    geometry = Column(Geometry("POLYGON"))
    storm = relationship("Storm", backref="events")


class HailReport(Base):
    """ 
        Table to store the hail reports from PreVots
    """
    __tablename__ = "hail_reports"
    
    id = Column(Integer, primary_key=True)
    datetime = Column(DateTime)
    location = Column(Geometry("POINT"))


class Intersection(Base):
    """
        Table to store the matches of storm polygons and hail reports
    """
    __tablename__ = "intersections"
    
    id = Column(Integer, primary_key=True)
    storm_event_id = Column(Integer, ForeignKey("storm_events.id"))
    hail_report_id = Column(Integer, ForeignKey("hail_reports.id"))
    intersection_time = Column(DateTime)
    
